{"input":{"ourVersion":"1.50.1","commit":"d2e414d9e4239a252d1ab117bd7067f125afd80a","locale":"en","devMode":false,"absoluteFolderPath":"/home/dalborga/.vscode/extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1615053225675},"result":[{"name":"flow-for-vscode","version":"1.5.0","publisher":"flowtype","description":"Flow support for VS Code","displayName":"Flow Language Support","keywords":["multi-root ready"],"engines":{"vscode":"^1.30.0"},"categories":["Programming Languages","Linters"],"private":true,"activationEvents":["onLanguage:javascript","onLanguage:javascriptreact","workspaceContains:**/.flowconfig"],"main":"./build/index.js","contributes":{"configuration":{"type":"object","title":"Flow Configurations","properties":{"flow.enabled":{"scope":"resource","type":"boolean","default":true,"description":"Is flow enabled"},"flow.useNPMPackagedFlow":{"scope":"resource","type":"boolean","default":true,"description":"Support using flow through your node_modules folder, WARNING: Checking this box is a security risk. When you open a project we will immediately run code contained within it."},"flow.pathToFlow":{"scope":"resource","type":"string","default":"flow","description":"Absolute path to flow binary. Special var ${workspaceFolder} or ${flowconfigDir} can be used in path (NOTE: in windows you can use '/' and can omit '.cmd' in path)"},"flow.useBundledFlow":{"scope":"resource","type":"boolean","default":true,"description":"If true will use flow bundled with this plugin if nothing works"},"flow.showUncovered":{"scope":"resource","type":"boolean","default":false,"description":"If true will show uncovered code by default"},"flow.coverageSeverity":{"scope":"resource","type":"string","enum":["error","warn","info"],"default":"info","description":"Type coverage diagnostic severity"},"flow.lazyMode":{"scope":"resource","type":"string","default":null,"description":"Set value to enable flow lazy mode"},"flow.stopFlowOnExit":{"scope":"resource","type":"boolean","default":true,"description":"Stop Flow on Exit"},"flow.useCodeSnippetOnFunctionSuggest":{"scope":"resource","type":"boolean","default":true,"description":"Complete functions with their parameter signature."},"flow.useLSP":{"scope":"window","type":"boolean","default":true,"description":"Turn off to switch from the official Flow Language Server implementation to talking directly to flow."},"flow.logLevel":{"scope":"resource","type":"string","enum":["error","warn","info","trace"],"default":"info","description":"Log level for output panel logs"},"flow.trace.server":{"scope":"window","anyOf":[{"type":"string","enum":["off","messages","verbose"],"default":"off"}],"default":"off","description":"Traces the communication between VSCode and the flow lsp service."},"flow.fileExtensions":{"scope":"resource","type":"array","default":[".js",".mjs",".jsx",".flow",".json"],"description":"(Supported only when useLSP: false). File extensions to consider for flow processing","items":{"type":"string"}},"flow.runOnEdit":{"scope":"resource","type":"boolean","default":true,"description":"If true will run flow on every edit, otherwise will run only when changes are saved (Note: 'useLSP: true' only supports syntax errors)"},"flow.runOnAllFiles":{"scope":"resource","type":"boolean","default":false,"description":"(Supported only when useLSP: false) Run Flow on all files, No need to put //@flow comment on top of files."},"flow.showStatus":{"scope":"resource","type":"boolean","default":true,"description":"(Supported only when useLSP: false) If true will display flow status is the statusbar"}}},"commands":[{"title":"Toggle display of uncovered areas","category":"Flow","command":"flow.toggleCoverage"},{"title":"Show Client Status","category":"Flow","command":"flow.showStatus"},{"title":"Restart Client","category":"Flow","command":"flow.restartClient"},{"title":"Log Client Debug Info","category":"Flow","command":"flow.logClientDebugInfo"},{"title":"Show Output Channel","category":"Flow","command":"flow.showOutputChannel"}],"languages":[{"id":"javascript","aliases":["JavaScript","js"],"filenamePatterns":["*.js.flow"]},{"id":"ini","filenames":[".flowconfig"]}]},"scripts":{"vscode:prepublish":"env NODE_ENV=production yarn build","compile":"yarn build --watch","build":"rm -rf build && rollup -c rollup.config.js","test":"flow check && yarn lint && yarn testonly","testonly":"env NODE_ENV=test jest","lint":"eslint lib --report-unused-disable-directives"},"dependencies":{"bin-version":"4.0.0","cross-spawn":"^6.0.5","dequeue":"^1.0.5","elegant-spinner":"^1.0.1","event-kit":"^2.5.3","flow-bin":"^0.107.0","fs-plus":"^3.1.1","fuzzaldrin":"^2.1.0","lodash.debounce":"^4.0.8","lru-cache":"^4.0.1","mkdirp":"^0.5.1","prettier":"1.18.2","rimraf":"^2.5.4","rxjs":"^5.0.0-beta.8","semver":"^6.3.0","shell-quote":"^1.6.0","temp":"^0.9.0","vscode-languageclient":"^5.2.1","which":"1.3.1"},"devDependencies":{"@babel/cli":"^7.6.0","@babel/core":"^7.6.0","@babel/plugin-proposal-class-properties":"^7.5.5","@babel/preset-env":"^7.6.0","@babel/preset-flow":"^7.0.0","babel-jest":"24.9.0","builtin-modules":"3.1.0","eslint":"6.3.0","eslint-plugin-import":"2.18.2","eslint-plugin-playlyfe":"7.0.1","jest":"24.9.0","rollup":"1.21.2","rollup-plugin-babel":"4.3.3","rollup-plugin-commonjs":"10.1.0","rollup-plugin-node-resolve":"5.2.0","rollup-plugin-progress":"1.1.1","rollup-plugin-terser":"5.1.1","vscode-uri":"2.0.3"},"icon":"flow-logo.png","repository":{"type":"git","url":"https://github.com/flowtype/flow-for-vscode.git"},"bugs":{"url":"https://github.com/flowtype/flow-for-vscode/issues"},"uuid":"b3917e4f-5086-4def-a82b-2ae6b708db16","isBuiltin":false,"isUnderDevelopment":false,"id":"flowtype.flow-for-vscode","identifier":{"value":"flowtype.flow-for-vscode","_lower":"flowtype.flow-for-vscode"},"extensionLocation":{"$mid":1,"fsPath":"/home/dalborga/.vscode/extensions/flowtype.flow-for-vscode-1.5.0","path":"/home/dalborga/.vscode/extensions/flowtype.flow-for-vscode-1.5.0","scheme":"file"}},{"name":"bash-debug","displayName":"Bash Debug","version":"0.3.9","publisher":"rogalmic","description":"A debugger extension for bash scripts (using bashdb).","author":{"name":"Michal Rogalinski","email":"rogalinsky@gmail.com"},"license":"MIT","keywords":["multi-root ready"],"engines":{"vscode":"^1.40.0","node":"^12.8.1"},"icon":"images/bash-debug-icon.png","categories":["Debuggers"],"private":true,"repository":{"type":"git","url":"https://github.com/rogalmic/vscode-bash-debug.git"},"bugs":{"url":"https://github.com/rogalmic/vscode-bash-debug/issues"},"badges":[{"url":"https://img.shields.io/github/downloads/rogalmic/vscode-bash-debug/latest/total.svg","href":"https://github.com/rogalmic/vscode-bash-debug/releases/latest","description":"Download latest beta release (master branch)"},{"url":"https://img.shields.io/github/stars/rogalmic/vscode-bash-debug.svg?style=social&label=Stars","href":"https://github.com/rogalmic/vscode-bash-debug/stargazers","description":"Star the project in github"},{"url":"https://img.shields.io/badge/paypal-donate-blue.svg","href":"https://paypal.me/rogalmic","description":"Donate some $ to keep project going"}],"dependencies":{"child-process":"^1.0.2","npm-which":"^3.0.1","shell-quote":"^1.7.2","vscode-debugadapter":"1.40.0","vscode-debugprotocol":"1.40.0"},"devDependencies":{"@types/mocha":"7.0.2","@types/node":"12.12.14","jsdoctest":"1.7.1","mocha":"7.1.2","standard-version":"^8.0.0","tslint":"6.1.2","typescript":"3.9.5","vsce":"1.77.0","vscode":"1.1.36","vscode-debugadapter-testsupport":"1.41.0"},"scripts":{"prepare":"tsc -p ./src","compile":"tsc -p ./src","tslint":"tslint ./src/**/*.ts","watch":"tsc -w -p ./src","test":"mocha -u tdd ./out/tests/; node_modules/.bin/mocha --require jsdoctest out/bashRuntime.js out/handlePath.js","postinstall":"node ./node_modules/vscode/bin/install","package":"vsce package","publish":"vsce publish","release":"standard-version"},"main":"./out/extension","activationEvents":["onDebug","onCommand:extension.bash-debug.getProgramName","onCommand:extension.bash-debug.selectProgramName"],"contributes":{"breakpoints":[{"language":"shellscript"}],"debuggers":[{"type":"bashdb","label":"Bash Debug","program":"./out/bashDebug.js","runtime":"node","configurationAttributes":{"launch":{"// `type`, `request` and `name` are required implicitly.":null,"required":["program"],"properties":{"args":{"// type: Array<string> -> warning `Incorrect type. Expected Array<string>` in launch.json":null,"description":"Command line arguments in array of strings format. (i.e. [\"--opt\", \"arg\"])","default":[]},"argsString":{"// type: string -> warning `Incorrect type. Expected string` in launch.json":null,"description":"Command line arguments in string format. (i.e. \"--opt arg\"]. The arguments in this string will be appended to the arguments of `args`, if present.)","default":""},"cwd":{"type":"string","description":"Working directory. (i.e. `cd $cwd; bashdb <options> $program` will be executed internally).","default":"${workspaceFolder}"},"program":{"type":"string","description":"Absolute path to a script. See also: https://code.visualstudio.com/docs/editor/variables-reference","default":"${file}"},"pathBash":{"type":"string","description":"Specify absolute path to bash. Refer to https://github.com/rogalmic/vscode-bash-debug/blob/master/README.md#usage","default":""},"pathBashdb":{"type":"string","description":"Specify absolute path to bashdb (on Windows, path in Linux Subsystem).","default":"/usr/local/bin/bashdb"},"pathBashdbLib":{"type":"string","description":"Specify absolute path to bashdb libs (on Windows, path in Linux Subsystem).","default":"/usr/share/bashdb"},"pathCat":{"type":"string","description":"Specify absolute path to cat (on Windows, path in Linux Subsystem).","default":"/usr/bin/cat"},"pathMkfifo":{"type":"string","description":"Specify absolute path to mkfifo (on Windows, path in Linux Subsystem).","default":"/usr/bin/mkfifo"},"pathPkill":{"type":"string","description":"Specify absolute path to pkill (on Windows, path in Linux Subsystem). On macOS, please use /usr/bin/pkill instead of /usr/local/bin/pkill, otherwise vscode crashes. see https://github.com/rogalmic/vscode-bash-debug/wiki/macOS:-avoid-use-of--usr-local-bin-pkill for details.","default":"/usr/local/bin/pkill"},"showDebugOutput":{"type":"boolean","description":"Defines if bashdb output will be visible together with script output.","default":true},"trace":{"type":"boolean","description":"Enable logging of the Debug Adapter Protocol.","default":true},"terminalKind":{"enum":["integrated","external","debugConsole"],"description":"Can be set to 'integrated', 'external' or 'debugConsole'. Using 'integrated' or 'external' may require explicit terminal interpreter set for workspace.","default":"debugConsole"},"env":{"type":"object","description":"Environment variables defined as an object with key value pairs - {\"MYVAR\" : \"MY VALUE\"}.","default":{}}}}},"// Template for initial launch.json":null,"// Added when: launch.json is missing && (":null,"//   Add configuration... (in debug pane) -> Bash Debug ||":null,"//   >Debug: Open launch.json -> Bash Debug ||":null,"//   (>Debug: Start Debugging -> Bash Debug && file type is not shellscript)":null,"// )":null,"initialConfigurations":[{"type":"bashdb","request":"launch","name":"Bash-Debug (simplest configuration)","program":"${file}"}],"// Added when select 'Add configuration...' -> 'Bash Debug' in debug pane":null,"// `label` is shown in IntelliSense and `name` is shown in DEBUG side-bar.":null,"configurationSnippets":[{"label":"Bash-Debug (hardcoded script name)","description":"Debug a bash script (specify the path to the script in launch.json)","body":{"type":"bashdb","request":"launch","name":"Bash-Debug (hardcoded script name)","cwd":"^\"\\${workspaceFolder}\"","program":"^\"\\${workspaceFolder}/path/to/script.sh\"","args":[]}},{"label":"Bash-Debug (select script from list of sh files)","description":"Debug a bash script (select script from the list of sh files before starting debug)","body":{"type":"bashdb","request":"launch","name":"Bash-Debug (select script from list of sh files)","cwd":"^\"\\${workspaceFolder}\"","program":"^\"\\${command:SelectScriptName}\"","args":[]}},{"label":"Bash-Debug (type in script name)","description":"Debug a bash script (specify the script path before starting debug)","body":{"type":"bashdb","request":"launch","name":"Bash-Debug (type in script name)","cwd":"^\"\\${workspaceFolder}\"","program":"^\"\\${command:AskForScriptName}\"","args":[]}}],"variables":{"AskForScriptName":"extension.bash-debug.getProgramName","SelectScriptName":"extension.bash-debug.selectProgramName"}}]},"uuid":"f4f0748b-9f86-461e-84f9-73bf2e1f91c2","isBuiltin":false,"isUnderDevelopment":false,"id":"rogalmic.bash-debug","identifier":{"value":"rogalmic.bash-debug","_lower":"rogalmic.bash-debug"},"extensionLocation":{"$mid":1,"fsPath":"/home/dalborga/.vscode/extensions/rogalmic.bash-debug-0.3.9","path":"/home/dalborga/.vscode/extensions/rogalmic.bash-debug-0.3.9","scheme":"file"}}]}